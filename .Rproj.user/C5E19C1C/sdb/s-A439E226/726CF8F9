{
    "collab_server" : "",
    "contents" : "%\\VignetteEngine{knitr::knitr}\n%\\VignetteIndexEntry{Grade of Membership Clustering and Visualization using CountClust}\n%\\VignettePackage{CountClust}\n\n% To compile this document\n% library('knitr'); rm(list=ls()); knit('CountClust/vignettes/count-clust.Rnw')\n% library('knitr'); rm(list=ls()); knit2pdf('CountClust/vignettes/count-clust.Rnw'); openPDF('count-clust.pdf')\n%\n\n\\documentclass[12pt]{article}\n\n\\newcommand{\\CountClust}{\\textit{CountClust}}\n\\usepackage{dsfont}\n\\usepackage{cite}\n\n\n<<knitr, echo=FALSE, results=\"hide\">>=\nlibrary(\"knitr\")\nopts_chunk$set(tidy=FALSE,tidy.opts=list(width.cutoff=30),dev=\"png\",fig.show=\"hide\",\n               fig.width=4,fig.height=7,\n               message=FALSE)\n@\n\n<<style, eval=TRUE, echo=FALSE, results=\"asis\">>=\nBiocStyle::latex()\n@\n\n\\author{Kushal K Dey, Chiaowen Joyce Hsiao \\& Matthew Stephens \\\\[1em] \\small{\\textit{Stephens Lab}, The University of Chicago} \\mbox{ }\\\\ \\small{\\texttt{$^*$Correspondending Email: mstephens@uchicago.edu}}}\n\n\\bioctitle[Grade of Membership Clustering and Visualization using \\CountClust{}]{Grade of Membership Model and Visualization for RNA-seq data using \\CountClust{}}\n\n\\begin{document}\n\n\\maketitle\n\n\\begin{abstract}\n  \\vspace{1em}\n Grade of membership or GoM models (also known as admixture models or Latent Dirichlet Allocation\") are a generalization of cluster models that allow each sample to have membership in multiple clusters. It is widely used to model ancestry of individuals in population genetics based on SNP/ microsatellite data and also in natural language processing for modeling documents \\cite{Pritchard2000, Blei2003}.\n\nThis \\R{} package implements tools to visualize the clusters obtained from fitting topic models using a Structure plot \\cite{Rosenberg2002} and extract the top features/genes that distinguish the clusters. In presence of known technical or batch effects, the package also allows for correction of these confounding effects.\n\n\\vspace{1em}\n\\textbf{\\CountClust{} version:} \\Sexpr{packageDescription(\"CountClust\")$Version} \\footnote{This document used the vignette from \\Bioconductor{} package \\Biocpkg{DESeq2, cellTree} as \\CRANpkg{knitr} template}\n\\end{abstract}\n\n<<options, results=\"hide\", echo=FALSE>>=\noptions(digits=3, width=80, prompt=\" \", continue=\" \")\n@\n\n\n\\newpage\n\n\\tableofcontents\n\n\\section{Introduction}\n\nIn the context of RNA-seq expression (bulk or singlecell seq) data, the grade of membership model allows each sample (usually a tissue sample or a single cell) to have some proportion of its RNA-seq reads coming from each cluster. For typical bulk RNA-seq experiments this assumption\ncan be argued as follows: each tissue sample is a mixture of different cell types, and so clusters could represent cell types (which are determined by the expression patterns of the genes), and the membership of a sample in each cluster could represent the proportions of each cell type present in that sample.\n\nMany software packages available for document clustering are applicable to modeling RNA-seq data. Here, we use the R package {\\tt maptpx} \\cite{Taddy2012} to fit these models, and add functionality for visualizing the results and annotating clusters by their most distinctive genes to help biological interpretation. We also provide additional functionality to correct for batch effects and also compare the outputs from two different grade of membership model fits to the same set of samples but different in terms of feature description or model assumptions.\n\n\\section{\\CountClust{} Installation}\n\n\\CountClust{} requires the following CRAN-R packages: \\CRANpkg{maptpx}, \\CRANpkg{ggplot2}, \\CRANpkg{cowplot}, \\CRANpkg{parallel}, \\CRANpkg{reshape2}, \\CRANpkg{RColorBrewer}, \\CRANpkg{flexmix}, \\CRANpkg{gtools}, \\CRANpkg{devtools} along with the \\Bioconductor{} package: \\Biocpkg{limma}.\n\n<<install_countclust_bio, eval=FALSE>>=\nsource(\"http://bioconductor.org/biocLite.R\")\nbiocLite(\"CountClust\")\n@ %def\n\nFor the latest updated version of the package \\begin{verb} maptpx \\end{verb} package (with some bug fixes from the CRAN version), we recommend the user to install the Github version.\n\n<<install_github, eval=TRUE>>=\nlibrary(devtools)\ninstall_github(\"TaddyLab/maptpx\")\n@ %def\n\nThe working version of the \\CountClust{} package is available on Github, along with the data packages used as examples in this vignette.\n\n<<install_countclust_github, eval=FALSE>>=\ninstall_github('kkdey/CountClust')\n@ %def\n\nThen load the package with:\n\n<<load_countclust, cache=FALSE, eval=TRUE,warning=FALSE>>=\nlibrary(CountClust)\n@ %def\n\n\\section{Data Preparation}\n\nWe install data packages as \\begin{verb} expressionSet \\end{verb} objects for bulk RNA-seq reads data from Brain tissue samples of human donors under GTEx (Genotype Tissue Expression) V6 Project  \\cite{GTEX2013} and a singlecell RNA-seq reads data across developmental stages in mouse embryo due to Deng \\textit{et al} 2014 \\cite{Deng2014}.\n\n%The data package due to Deng \\textit{et al} is a processed version of the data publicly available at Gene Expression Omnibus (GEO:GSE45719: see \\url{http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE45719}).\n\n\\begin{verb} singleCellRNASeqMouseDeng2014 \\end{verb} data package due to Deng \\textit{et al} is a processed version of the data publicly available at Gene Expression Omnibus (GEO:GSE45719: see \\url{http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE45719}).\n\n%The data package for GTEx V6 Brain sample data is again a processed version of the data publicly available at the GTEx Portal (\\url{http://www.gtexportal.org/home/}, dbGaP accession phs000424.v6.p1, release date: Oct 19, 2015).\n\n<<data_install_deng, eval=TRUE>>=\nlibrary(devtools)\n\nread.data1 = function() {\n  x = tempfile()\n  download.file('https://cdn.rawgit.com/kkdey/singleCellRNASeqMouseDeng2014/master/data/Deng2014MouseEsc.rda', destfile=x, quiet=TRUE)\n  z = get(load((x)))\n  return(z)\n}\n\nDeng2014MouseESC <- read.data1()\n\n## Alternatively\n# install_github('kkdey/singleCellRNASeqMouseDeng2014')\n@ %def\n\n\\begin{verb} GTExV6Brain \\end{verb} The data package for GTEx V6 Brain sample data is again a processed version of the data publicly available at the GTEx Portal (\\url{http://www.gtexportal.org/home/}, dbGaP accession phs000424.v6.p1, release date: Oct 19, 2015).\n\n<<data_install_gtex, eval=FALSE>>=\nread.data2 = function() {\n  x = tempfile()\n  download.file('https://cdn.rawgit.com/kkdey/GTExV6Brain/master/data/GTExV6Brain.rda', destfile = x, quiet=TRUE)\n  z = get(load((x)))\n  return(z)\n}\n\nGTExV6Brain <- read.data2()\n\n## Alternatively\n# install_github('kkdey/GTExV6Brain')\n@ %def\n\n\\subsubsection{Deng et al 2014}\n\nLoad the scRNA-seq data due to Deng \\textit{et al} 2014.\n\n<<data_load_deng, eval=TRUE>>=\ndeng.counts <- Biobase::exprs(Deng2014MouseESC)\ndeng.meta_data <- Biobase::pData(Deng2014MouseESC)\ndeng.gene_names <- rownames(deng.counts)\n@ %def\n\n\\subsubsection{GTEx V6 Brain}\n\nLoad the bulk-RNA seq data from GTEx V6 brain data.\n\n<<data_load_gtex, eval=FALSE>>=\ngtex.counts <- Biobase::exprs(GTExV6Brain)\ngtex.meta_data <- Biobase::pData(GTExV6Brain)\ngtex.gene_names <- rownames(gtex.counts)\n@ %def\n\n\n\\section{Fitting the GoM Model}\n\nWe use a wrapper function of the \\textit{topics()} function in the \\CRANpkg{maptpx} due to Matt Taddy \\cite{Taddy2012}.\n\nAs an example, we fit the topic model for \\Robject{k}=4 on the GTEx V6 Brain data and save the GoM model output file to user-defined directory.\n\n<<topic_fit_gtex, eval=FALSE>>=\nFitGoM(t(gtex.counts),\n            K=4, tol=0.1,\n            path_rda=\"../data/GTExV6Brain.FitGoM.rda\")\n@ %def\n\nOne can also input a vector of clusters under \\begin{verb} nclus_vec \\end{verb} as we do for a list of cluster numbers from $2$ to $7$ for Deng \\textit{et al} 2014 data.\n\n<<topic_fit_deng, eval=FALSE>>=\nFitGoM(t(deng.counts),\n            K=2:7, tol=0.1,\n            path_rda=\"../data/MouseDeng2014.FitGoM.rda\")\n@ %def\n\n\n\n\\section{Structure plot visualization}\n\nNow we perform the visualization for \\Robject{k}=$6$ for the Deng \\textit{et al} 2014 data.\n\nWe load the GoM fit for \\Robject{k}=6.\n\n<<prepare_deng_gom,eval=TRUE, warning=FALSE>>=\ndata(\"MouseDeng2014.FitGoM\")\nnames(MouseDeng2014.FitGoM$clust_6)\nomega <- MouseDeng2014.FitGoM$clust_6$omega\n@ %def\n\nWe prepare the annotations for the visualization.\n\n<<plot_topic_deng_annot, eval=TRUE, warning=FALSE>>=\nannotation <- data.frame(\n  sample_id = paste0(\"X\", c(1:NROW(omega))),\n  tissue_label = factor(rownames(omega),\n                        levels = rev( c(\"zy\", \"early2cell\",\n                                        \"mid2cell\", \"late2cell\",\n                                        \"4cell\", \"8cell\", \"16cell\",\n                                        \"earlyblast\",\"midblast\",\n                                         \"lateblast\") ) ) )\n\nrownames(omega) <- annotation$sample_id;\n@ %def\n\nNow we perform the visualization.\n\n\\begin{figure}[htp]\n\\begin{center}\n<<plot_topic_deng,eval=TRUE, warning=FALSE, fig.show=\"asis\", dpi=144, fig.width=3, fig.height=7, out.width=\"3in\", out.height=\"7in\">>=\nStructureGGplot(omega = omega,\n                annotation = annotation,\n                palette = RColorBrewer::brewer.pal(8, \"Accent\"),\n                yaxis_label = \"Development Phase\",\n                order_sample = TRUE,\n                axis_tick = list(axis_ticks_length = .1,\n                                 axis_ticks_lwd_y = .1,\n                                 axis_ticks_lwd_x = .1,\n                                 axis_label_size = 7,\n                                 axis_label_face = \"bold\"))\n\n\n@ %def\n\\end{center}\n\\end{figure}\n\n%\\begin{figure}[htp]\n%\\begin{center}\n%\\includegraphics[width=3in,height=7in]{figures/plot_topic_deng-1}\n%\\end{center}\n%\\end{figure}\n\nIn the above plot, the samples in each batch have been sorted by the proportional memebership of the most representative cluster in that batch. One can also use \\begin{verb} order_sample=FALSE \\end{verb} for the un-ordered version, which retains the order as in the data (see Supplementary analysis for example).\n\nNow we perform the Structure plot visualization for \\Robject{k}=$4$ for GTEx V6 data for Brain samples .\n\nWe load the GoM fit for \\Robject{k}=4.\n\n<<prepare_gtex_gom, eval=TRUE>>=\ndata(\"GTExV6Brain.FitGoM\")\nomega <- GTExV6Brain.FitGoM$omega;\ndim(omega)\ncolnames(omega) <- c(1:NCOL(omega))\n@ %def\n\nWe now prepare the annotations for the visualization.\n\n<<annot_gtex, eval=FALSE>>=\ntissue_labels <- gtex.meta_data[,3];\n\n\nannotation <- data.frame(\n    sample_id = paste0(\"X\", 1:length(tissue_labels)),\n    tissue_label = factor(tissue_labels,\n                          levels = rev(unique(tissue_labels) ) ) );\n\ncols <- c(\"blue\", \"darkgoldenrod1\", \"cyan\", \"red\")\n@ %def\n\nNow we perform the visualization.\n\n<<plot_topic_gtex,eval=FALSE, warning=FALSE, fig.show=\"asis\", dpi=144, fig.width=5, fig.height=7, out.width=\"5in\", out.height=\"7in\">>=\nStructureGGplot(omega = omega,\n                annotation= annotation,\n                palette = cols,\n                yaxis_label = \"\",\n                order_sample = TRUE,\n                split_line = list(split_lwd = .4,\n                                  split_col = \"white\"),\n                axis_tick = list(axis_ticks_length = .1,\n                                 axis_ticks_lwd_y = .1,\n                                 axis_ticks_lwd_x = .1,\n                                 axis_label_size = 7,\n                                 axis_label_face = \"bold\"))\n@ %def\n\n\n\\begin{figure}[htp]\n\\begin{center}\n\\includegraphics[width=4in,height=6in]{figures/gtex_annot-1}\n\\end{center}\n\\end{figure}\n\n\\clearpage\n\n\\section{Cluster Annotations}\n\nWe extract the top genes driving each cluster using the \\begin{verb} ExtractTopFeatures() \\end{verb} functionality of the \\CountClust{} package. We first perform the cluster annotations from the GoM model fit with \\Robject{k}=$6$ on the single cell RNA-seq data due to Deng \\textit{et al}\n\n<<extract_features_deng, eval=TRUE, warning=FALSE>>=\ntheta_mat <- MouseDeng2014.FitGoM$clust_6$theta;\ntop_features <- ExtractTopFeatures(theta_mat, top_features=100,\n                                   method=\"poisson\", options=\"min\");\ngene_list <- do.call(rbind, lapply(1:dim(top_features)[1],\n                        function(x) deng.gene_names[top_features[x,]]))\n@ %def\n\nWe tabulate the top $5$ genes for these $6$ clusters.\n\n<<top_genes_clusters_deng, eval=TRUE>>=\nxtable::xtable(gene_list[,1:5])\n@ %def\n\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rlllll}\n  \\hline\n & 1 & 2 & 3 & 4 & 5 \\\\\n  \\hline\n1 & Timd2 & Isyna1 & Alppl2 & Pramel5 & Hsp90ab1 \\\\\n  2 & Upp1 & Tdgf1 & Aqp8 & Fabp5 & Tat \\\\\n  3 & Actb & Krt18 & Fabp3 & Id2 & Tspan8 \\\\\n  4 & Rtn2 & Ebna1bp2 & Zfp259 & Nasp & Cenpe \\\\\n  5 & LOC100502936 & Bcl2l10 & Tcl1 & E330034G19Rik & Oas1d \\\\\n  6 & Obox3 & Zfp352 & Gm8300 & Usp17l5 & BB287469 \\\\\n   \\hline\n\\end{tabular}\n\\end{table}\n\nWe next perform the same for the topic model fit on the GTEx V6 Brain samples data with \\Robject{k}=$4$ clusters.\n\n<<extract_features_gtex, eval=FALSE, warning=FALSE>>=\ntheta_mat <- GTExV6Brain.FitGoM$theta;\ntop_features <- ExtractTopFeatures(theta_mat, top_features=100,\n                                   method=\"poisson\", options=\"min\");\ngene_list <- do.call(rbind, lapply(1:dim(top_features)[1],\n                        function(x) gtex.gene_names[top_features[x,]]))\n@ %def\n\nThe top $3$ genes (ensemble IDs) driving these $4$ clusters.\n\n<<top_genes_clusters_gtex, eval=FALSE>>=\nxtable::xtable(gene_list[,1:3])\n@ %def\n\n\\begin{table}[ht]\n\\centering\n\\begin{tabular}{rlll}\n  \\hline\n & 1 & 2 & 3 \\\\\n  \\hline\n  1 & ENSG00000120885.15 & ENSG00000130203.5 & ENSG00000131771.9 \\\\\n  2 & ENSG00000171617.9 & ENSG00000160014.12 & ENSG00000154146.8 \\\\\n  3 & ENSG00000112139.10 & ENSG00000139899.6 & ENSG00000008710.13 \\\\\n  4 & ENSG00000197971.10 & ENSG00000266844.1 & ENSG00000237973.1 \\\\\n   \\hline\n\\end{tabular}\n\\end{table}\n\n\n\\begin{thebibliography}{1}\n\n\\bibitem{Pritchard2000}\nPritchard, Jonathan K., Matthew Stephens, and Peter Donnelly.\n\\newblock Inference of population structure using multilocus genotype data.\n\\newblock {\\textit{Genetics}}. 155.2,  945-959, 200.\n\n\\bibitem{Rosenberg2002}\nRosenberg NA, Pritchard JK,  Weber JL, Cann HM,  Kidd KK,  Zhivotovsky LA,  Feldman MW.\n\\newblock The genetic structure of human populations.\n\\newblock {\\textit{Science}}. 298,  2381-2385, 2002.\n\n\\bibitem{Blei2003}\nBlei DM,  Ng AY, Jordan MI.\n\\newblock Latent Dirichlet Allocation.\n\\newblock {\\textit{J. Mach. Learn. Res.}}. 3, 993-1022, 2003.\n\n\\bibitem{Taddy2012}\nMatt Taddy.\n\\newblock On Estimation and Selection for Topic Models.\n\\newblock \\textit{AISTATS 2012, JMLR W\\&CP 22}.(maptpx R package), 2012.\n\n\\bibitem{Jaitin2014}\nJaitin DA,  Kenigsberg E et al.\n\\newblock Massively Parallel Single-Cell RNA-Seq for Marker-Free Decomposition of Tissues into Cell Types.\n\\newblock {\\textit{Science}}. 343 (6172) 776-779, 2014.\n\n\\bibitem{Deng2014}\nDeng Q,  Ramskold D,  Reinius B,  Sandberg R.\n\\newblock Single-Cell RNA-Seq Reveals Dynamic, Random Monoallelic Gene Expression in Mammalian Cells.\n\\newblock {\\textit{Science}}.  343 (6167) 193-196, 2014.\n\n\\bibitem{GTEX2013}\nThe GTEx Consortium.\n\\newblock The Genotype-Tissue Expression (GTEx) project.\n\\newblock {\\textit{Nature genetics}}. 45(6): 580-585. doi:10.1038/ng.2653, 2013.\n\n\\end{thebibliography}\n\n% \\bibliography{CountClust/REFERENCES}\n\n\\section{Supplementary analysis}\n\nAs an additional analysis, we apply the \\CountClust{} tools on another single-cell RNA-seq data from mouse spleen due to Jaitin \\textit{et al} 2014 \\cite{Jaitin2014}. The data had technical effects in the form of \\begin{verb} amplification batch \\end{verb} which the user may want to correct for.\n\nWe first install and load the data.\n\n<<data_install_jaitin, echo=TRUE, eval=TRUE>>=\n\nread.data3 = function() {\n  x = tempfile()\n  download.file('https://cdn.rawgit.com/jhsiao999/singleCellRNASeqMouseJaitinSpleen/master/data/MouseJaitinSpleen.rda', destfile = x, quiet=TRUE)\n  z = get(load((x)))\n  return(z)\n}\n\nMouseJaitinSpleen <- read.data3()\n\n## Alternatively\n# devtools::install_github('jhsiao999/singleCellRNASeqMouseJaitinSpleen')\n@ %def\n\n<<data_load_jaitin, echo=TRUE, eval=TRUE>>=\njaitin.counts <- Biobase::exprs(MouseJaitinSpleen)\njaitin.meta_data <- Biobase::pData(MouseJaitinSpleen)\njaitin.gene_names <- rownames(jaitin.counts)\n@ %def\n\nExtracting the non-ERCC genes satisfying some quality measures.\n\n<<non_ercc, eval=TRUE, echo=TRUE>>=\nENSG_genes_index <- grep(\"ERCC\", jaitin.gene_names, invert = TRUE)\njaitin.counts_ensg <- jaitin.counts[ENSG_genes_index, ]\nfilter_genes <- c(\"M34473\",\"abParts\",\"M13680\",\"Tmsb4x\",\n                  \"S100a4\",\"B2m\",\"Atpase6\",\"Rpl23\",\"Rps18\",\n                  \"Rpl13\",\"Rps19\",\"H2-Ab1\",\"Rplp1\",\"Rpl4\",\n                  \"Rps26\",\"EF437368\")\nfcounts <- jaitin.counts_ensg[ -match(filter_genes, rownames(jaitin.counts_ensg)), ]\nsample_counts <- colSums(fcounts)\n\nfilter_sample_index <- which(jaitin.meta_data$number_of_cells == 1 &\n                              jaitin.meta_data$group_name == \"CD11c+\" &\n                                 sample_counts > 600)\nfcounts.filtered <- fcounts[,filter_sample_index];\n\n@ %def\n\nWe filter the metadata likewise\n\n<<metadata, eval=TRUE, echo=TRUE>>=\njaitin.meta_data_filtered <- jaitin.meta_data[filter_sample_index, ]\n@ %def\n\nWe fit the GoM model for \\Robject{k}=7 and plot the Structure plot visualization to show that the amplification batch indeed drives the clustering patterns.\n\n<<topic_fit_jaitin, eval=FALSE, echo=TRUE>>=\nStructureObj(t(fcounts),\n            nclus_vec=7, tol=0.1,\n             path_rda=\"../data/MouseJaitinSpleen.FitGoM.rda\")\n@ %def\n\n<<plot_topic_annot, eval=TRUE, echo=TRUE>>=\ndata(\"MouseJaitinSpleen.FitGoM\")\nnames(MouseJaitinSpleen.FitGoM$clust_7)\nomega <- MouseJaitinSpleen.FitGoM$clust_7$omega\n\namp_batch <- as.numeric(jaitin.meta_data_filtered[ , \"amplification_batch\"])\nannotation <- data.frame(\n    sample_id = paste0(\"X\", c(1:NROW(omega)) ),\n    tissue_label = factor(amp_batch,\n                          levels = rev(sort(unique(amp_batch))) ) )\n@ %def\n\n\\begin{figure}[htp]\n\\begin{center}\n<<plot_topic, eval=TRUE, echo=TRUE, warning=FALSE, fig.show=\"asis\", dpi=144, fig.width=3, fig.height=7, out.width=\"3in\", out.height=\"7in\">>=\nStructureGGplot(omega = omega,\n                annotation = annotation,\n                palette = RColorBrewer::brewer.pal(9, \"Set1\"),\n                yaxis_label = \"Amplification batch\",\n                order_sample = FALSE,\n                axis_tick = list(axis_ticks_length = .1,\n                                 axis_ticks_lwd_y = .1,\n                                 axis_ticks_lwd_x = .1,\n                                 axis_label_size = 7,\n                                 axis_label_face = \"bold\"))\n\n@ %def\n\\end{center}\n\\end{figure}\n\nIt seems from the above Structure plot that \\begin{verb} amplification batch \\end{verb} drives the clusters. To remove the effect of amplification batch, one can use. For this, we use the \\begin{verb} BatchCorrectedCounts() \\end{verb} functionality of the package.\n\n\\clearpage\n\n<<batch_correct, eval=FALSE, echo=TRUE>>=\nbatchcorrect.fcounts <- BatchCorrectedCounts(t(fcounts.filtered),\n                                          amp_batch, use_parallel = FALSE);\ndim(batchcorrect.fcounts)\n@ %def\n\n\\section{Acknowledgements}\n\nWe would like to thank Deng \\textit{et al} and the GTEx Consortium for having making the data publicly available. We would like to thank Matt Taddy, Amos Tanay, Po Yuan Tung and Raman Shah for helpful discussions related to the project and the package.\n\n\\section{Session Info}\n\n<<session_info, eval=TRUE>>=\nsessionInfo()\n@ %def\n\n\\end{document}\n",
    "created" : 1478396223613.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4041066634",
    "id" : "726CF8F9",
    "lastKnownWriteTime" : 1478397945,
    "last_content_update" : 1478397945,
    "path" : "~/Desktop/CountClust/vignettes/count-clust.Rnw",
    "project_path" : "vignettes/count-clust.Rnw",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "sweave"
}